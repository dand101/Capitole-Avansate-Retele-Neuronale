
Epoch 1/50
Training: 100%|██████████| 196/196 [00:34<00:00,  5.65batch/s, loss=4.53]
Average Training Loss: 4.5785
Evaluating: 100%|██████████| 40/40 [00:00<00:00, 40.54batch/s, accuracy=2.8] 
Validation Accuracy: 2.80%

Epoch 2/50
Training: 100%|██████████| 196/196 [00:31<00:00,  6.18batch/s, loss=4.63]
Average Training Loss: 4.5085
Evaluating: 100%|██████████| 40/40 [00:01<00:00, 32.32batch/s, accuracy=3.78]
Validation Accuracy: 3.78%

Epoch 3/50
Training: 100%|██████████| 196/196 [00:34<00:00,  5.73batch/s, loss=4.61]
Average Training Loss: 4.4507
Evaluating: 100%|██████████| 40/40 [00:01<00:00, 34.48batch/s, accuracy=5.13]
Validation Accuracy: 5.13%

Epoch 4/50
Training: 100%|██████████| 196/196 [00:32<00:00,  6.07batch/s, loss=4.25]
Average Training Loss: 4.3576
Evaluating: 100%|██████████| 40/40 [00:01<00:00, 36.76batch/s, accuracy=7.33]
Validation Accuracy: 7.33%

Epoch 5/50
Training:  14%|█▍        | 27/196 [00:04<00:29,  5.74batch/s, loss=4.35]
Traceback (most recent call last):
  File "C:\Users\dando\Documents\GitHub\Capitole-Avansate-Retele-Neuronale\tema3\train.py", line 244, in <module>
    main()
  File "C:\Users\dando\Documents\GitHub\Capitole-Avansate-Retele-Neuronale\tema3\train.py", line 240, in main
    run_training(config, config['sweep']['enabled'])
  File "C:\Users\dando\Documents\GitHub\Capitole-Avansate-Retele-Neuronale\tema3\train.py", line 201, in run_training
    avg_loss = train_one_epoch(model, train_loader, optimizer, device, other_augmentation)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dando\Documents\GitHub\Capitole-Avansate-Retele-Neuronale\tema3\train.py", line 131, in train_one_epoch
    for batch in tbar:
  File "C:\Users\dando\AppData\Local\Programs\Python\Python312\Lib\site-packages\tqdm\std.py", line 1181, in __iter__
    for obj in iterable:
  File "C:\Users\dando\AppData\Local\Programs\Python\Python312\Lib\site-packages\torch\utils\data\dataloader.py", line 630, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\dando\AppData\Local\Programs\Python\Python312\Lib\site-packages\torch\utils\data\dataloader.py", line 673, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dando\AppData\Local\Programs\Python\Python312\Lib\site-packages\torch\utils\data\_utils\fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "C:\Users\dando\Documents\GitHub\Capitole-Avansate-Retele-Neuronale\tema3\datasets\cached_dataset.py", line 15, in __getitem__
    image = self.transform(image)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dando\AppData\Local\Programs\Python\Python312\Lib\site-packages\torchvision\transforms\transforms.py", line 95, in __call__
    img = t(img)
          ^^^^^^
  File "C:\Users\dando\AppData\Local\Programs\Python\Python312\Lib\site-packages\torch\nn\modules\module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dando\AppData\Local\Programs\Python\Python312\Lib\site-packages\torch\nn\modules\module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dando\AppData\Local\Programs\Python\Python312\Lib\site-packages\torchvision\transforms\transforms.py", line 1372, in forward
    return F.rotate(img, angle, self.interpolation, self.expand, self.center, fill)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dando\AppData\Local\Programs\Python\Python312\Lib\site-packages\torchvision\transforms\functional.py", line 1121, in rotate
    return F_pil.rotate(img, angle=angle, interpolation=pil_interpolation, expand=expand, center=center, fill=fill)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dando\AppData\Local\Programs\Python\Python312\Lib\site-packages\torchvision\transforms\_functional_pil.py", line 313, in rotate
    opts = _parse_fill(fill, img)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dando\AppData\Local\Programs\Python\Python312\Lib\site-packages\torchvision\transforms\_functional_pil.py", line 273, in _parse_fill
    fill = tuple(fill)  # type: ignore[arg-type]
           ^^^^^^^^^^^
KeyboardInterrupt
